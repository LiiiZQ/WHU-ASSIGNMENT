package com;

public class FPgrowth {
	/* FP增长算法
	 * 然而，先验算法必须遍历每个循环中的所有数据，这由于其低效率而是不可接受的，尤其是当数据集非常大时。因此
	 * 引入FP-Growth算法来解决这个问题。在FP-Growth算法中，数据集只需要扫描两次，无论它有多大。在第一次扫
	 * 描中，计算元素的频率。然后在第二次扫描中，构建数据结构调用FP-Tree和头表。之后我们可以通过递归挖掘这个
	 * FP-Tree来找到所有频繁项集。
	 * 查看关联代码/ fpgrowth.py的详细信息。
	 */
}
